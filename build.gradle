plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.openapi.generator' version '7.7.0'
}

group = 'com.almaz'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	implementation 'org.projectlombok:lombok:1.18.30'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.9'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.postgresql:postgresql:42.7.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = "spring"
	inputSpec.set(file("${projectDir}/src/main/resources/static/BlogPostAPI.yaml").toURI().toString())
	outputDir = "$buildDir/generated"
	apiPackage = "com.almaz.blogserver.api"
	modelPackage = "com.almaz.blogserver.model"
	modelNameSuffix.set("Model")
	groupId.set("com.ama.openapigenerator")
	configOptions = [
			library: 'spring-boot',
			dateLibrary: 'java8',
			interfaceOnly: 'true',
			skipDefaultInterface: 'true',
			useTags: 'true',
			useSpringBoot3: 'true',
	]
}

sourceSets {
	main {
		java {
			srcDirs "$buildDir/generated/src/main/java"
		}
	}
}

compileJava.dependsOn tasks.openApiGenerate

openApiValidate {
	inputSpec.set(file("${projectDir}/BlogPostAPI.yaml").toURI().toString())
}