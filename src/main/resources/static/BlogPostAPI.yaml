openapi: 3.0.1
info:
  title: Blogging Platform API
  description: API for managing blog posts
  version: 1.0.0

paths:
  /api/v1/posts:
    get:
      summary: Get all posts
      operationId: getAllPosts
      parameters:
        - $ref: "#/components/parameters/termParam"

      tags:
        - posts
      responses:
        "200":
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PostResponse"
                maxItems: 100

    post:
      summary: Create a new post
      operationId: createNewPost
      tags:
        - posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "201":
          description: The post was successfully created. Returns no content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostResponse"

  /api/v1/posts/{id}:
    parameters:
      - $ref: "#/components/parameters/idParam"
    get:
      summary: Get a post by ID
      operationId: getPost
      tags:
        - posts
      responses:
        "200":
          description: Post details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostResponse"
        "404":
          description: Post with given ID is not found

    put:
      summary: Update a post by ID
      operationId: updatePost
      tags:
        - posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Post"
      responses:
        "204":
          description: Post updated. Return no content.

    delete:
      summary: Delete a post by ID
      operationId: deletePost
      tags:
        - posts
      responses:
        "204":
          description: The post was successfully deleted. No content returned.
        "404":
          description: Post with given ID is not found

components:
  parameters:
    idParam:
      in: path
      name: id
      required: true
      description: Unique post ID
      schema:
        type: integer
        format: int64
        minimum: 0
    termParam:
      name: term
      in: query
      description: Filter posts by a specific search term. Filter applied on title, content and category.
      required: false
      schema:
        type: string
        example: tech
        maxLength: 50

  schemas:
    Post:
      example:
        title: "My First Blog Post"
        content: "This is the content of my first blog post."
        category: "Technology"
        tags: ["Tech", "Programming"]
      type: object
      properties:
        title:
          $ref: "#/components/schemas/Title"
        content:
          $ref: "#/components/schemas/Content"
        category:
          $ref: "#/components/schemas/Category"
        tags:
          $ref: "#/components/schemas/Tags"
      required:
        - title
        - content
        - category
        - tags

    PostResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          $ref: "#/components/schemas/Title"
        content:
          $ref: "#/components/schemas/Content"
        category:
          $ref: "#/components/schemas/Category"
        tags:
          $ref: "#/components/schemas/Tags"
        createdAt:
          type: string
          format: date-time
          maxLength: 50
        updatedAt:
          type: string
          format: date-time
          maxLength: 50
      required:
        - id
        - title
        - content
        - category
        - tags
        - createdAt
        - updatedAt

    Title:
      type: string
      minLength: 1
      maxLength: 100

    Content:
      type: string
      minLength: 1
      maxLength: 1000

    Category:
      type: string
      minLength: 1
      maxLength: 100

    Tags:
      type: array
      items:
        type: string
        maxLength: 32
      maxItems: 100
